buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        jcenter()
        mavenCentral()
        maven { name="sponge"; url 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '[6.0,6.2)', changing: true
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'

version = '1.0.0'
group = 'com.hexagram2021.tetrachordlib'

base {
    archivesName = 'tetrachordlib'
}
archivesBaseName = 'tetrachordlib'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.18.2'

    runs {
        client {
            workingDirectory project.file('run/client')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'tetrachordlib'

            mods {
                tetrachordlib {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'tetrachordlib'

            mods {
                tetrachordlib {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run/testServer')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'tetrachordlib'

            mods {
                tetrachordlib {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run/data')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'tetrachordlib', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                tetrachordlib {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { // TOP
        url "https://cursemaven.com"
    }
    maven { // JEI
        name 'DVS1 Maven FS'
        url 'https://dvs1.progwml6.com/files/maven'
    }
    maven { //mirror
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.0'

    runtimeOnly fg.deobf("mezz.jei:jei-1.18.2:9.7.1.255")
    runtimeOnly fg.deobf("curse.maven:jade-324717:4575623")
    runtimeOnly fg.deobf("curse.maven:spark-361579:4505375")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Tetrachord Lib",
                "Specification-Vendor"    : "Hexagram",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Hexagram",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'FMLCorePluginContainsFMLMod': 'true'
        ])
    }
    from "LICENSE"
}

jar.finalizedBy('reobfJar')

task sourceJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allJava
}

artifacts {
    archives sourceJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourceJar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
